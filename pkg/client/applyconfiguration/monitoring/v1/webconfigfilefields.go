// Copyright The prometheus-operator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// WebConfigFileFieldsApplyConfiguration represents an declarative configuration of the WebConfigFileFields type for use
// with apply.
type WebConfigFileFieldsApplyConfiguration struct {
	TLSConfig      *WebTLSConfigApplyConfiguration  `json:"tlsConfig,omitempty"`
	HTTPConfig     *WebHTTPConfigApplyConfiguration `json:"httpConfig,omitempty"`
	BasicAuthUsers map[string]string                `json:"basicAuthUsers,omitempty"`
}

// WebConfigFileFieldsApplyConfiguration constructs an declarative configuration of the WebConfigFileFields type for use with
// apply.
func WebConfigFileFields() *WebConfigFileFieldsApplyConfiguration {
	return &WebConfigFileFieldsApplyConfiguration{}
}

// WithTLSConfig sets the TLSConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TLSConfig field is set to the value of the last call.
func (b *WebConfigFileFieldsApplyConfiguration) WithTLSConfig(value *WebTLSConfigApplyConfiguration) *WebConfigFileFieldsApplyConfiguration {
	b.TLSConfig = value
	return b
}

// WithHTTPConfig sets the HTTPConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTPConfig field is set to the value of the last call.
func (b *WebConfigFileFieldsApplyConfiguration) WithHTTPConfig(value *WebHTTPConfigApplyConfiguration) *WebConfigFileFieldsApplyConfiguration {
	b.HTTPConfig = value
	return b
}

// WithBasicAuthUsers puts the entries into the BasicAuthUsers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the BasicAuthUsers field,
// overwriting an existing map entries in BasicAuthUsers field with the same key.
func (b *WebConfigFileFieldsApplyConfiguration) WithBasicAuthUsers(entries map[string]string) *WebConfigFileFieldsApplyConfiguration {
	if b.BasicAuthUsers == nil && len(entries) > 0 {
		b.BasicAuthUsers = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.BasicAuthUsers[k] = v
	}
	return b
}
